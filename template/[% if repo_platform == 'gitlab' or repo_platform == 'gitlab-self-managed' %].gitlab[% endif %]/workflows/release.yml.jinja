[% from pathjoin("includes", "version_compare.jinja") import version_between %]
pages-build:
  artifacts:
    paths:
      - public
  cache:
    paths:
      - .venv
    key:
      files:
        - pdm.dev.lock
        - pdm.lock
      prefix: venv-${PYTHON_VERSION}
    policy: pull
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - make dev-doc
    - make doc
  stage: release
pages:
  artifacts:
    paths:
      - public
  needs:
    - pages-build
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - echo "Running the pages job."
  stage: release
  variables:
    GIT_STRATEGY: none
container-publish:
  image: docker:27.4.1@sha256:3c8fb358b82767a38189e54a89a2ba8d71109f0a17efa87fd009ef8283c46df6
  parallel:
    matrix:
      - PYTHON_VERSION:
[% if version_between("3.9", min_py, max_py) %]
          - '3.9'
[% endif %]
[% if version_between("3.10", min_py, max_py) %]
          - '3.10'
[% endif %]
[% if version_between("3.11", min_py, max_py) %]
          - '3.11'
[% endif %]
[% if version_between("3.12", min_py, max_py) %]
          - '3.12'
[% endif %]
[% if version_between("3.13", min_py, max_py) %]
          - '3.13'
[% endif %]
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker context create builder
    - docker buildx create builder --name container --driver docker-container --use
    - docker buildx inspect --bootstrap --builder container
    - |
      docker buildx build . \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/dev-cache:py${PYTHON_VERSION} \
        --file .devcontainer/Dockerfile \
        --load \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target dev
    - |
      docker run --rm \
        -e CI=true \
        -v ${PWD}:/workspace \
        ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION} \
        make dev lint test doc build
    - |
      docker buildx build . \
        --build-arg SCM_VERSION=${CI_COMMIT_TAG} \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --file .devcontainer/Dockerfile \
        --load \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target prod
    - docker run --rm ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION}
    - |
      docker buildx build . \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/dev-cache:py${PYTHON_VERSION},mode=max \
        --file .devcontainer/Dockerfile \
        --push \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target dev
    - |
      docker buildx build . \
        --build-arg SCM_VERSION=${CI_COMMIT_TAG} \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --file .devcontainer/Dockerfile \
        --push \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target prod
  services:
    - docker:27.4.1@sha256:3c8fb358b82767a38189e54a89a2ba8d71109f0a17efa87fd009ef8283c46df6
  stage: release
  variables:
    DOCKER_TLS_CERTDIR: /certs
    PYTHON_VERSION: ${PYTHON_VERSION}
    SOURCE_DATE_EPOCH: 0
package-publish:
  cache:
    paths:
      - .venv
    key:
      files:
        - pdm.dev.lock
        - pdm.lock
      prefix: venv-${PYTHON_VERSION}
    policy: pull
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - make publish
  stage: release
